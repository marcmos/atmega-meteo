#!/bin/bash

function meteo {
    xml=`curl -s http://meteo.ftj.agh.edu.pl/meteo/meteo.xml`
    temperature=$(grep -Po '<ta>\K[^ ]+' <<< $xml);
    windchill=$(grep -Po '<owindchill>\K[^ ]+' <<< $xml);
    humidity=$(grep -Po '<ua>\K[^ ]+' <<< $xml);
    meteo="T: $temperature/$windchill\nH: $humidity%"
}

function pollution {
    date=`date +%d.%m.%Y`;
    pollution=`curl \
        -s \
        -X POST \
        -H 'Content-Type: application/x-www-form-urlencoded; charset=UTF-8' \
        --data-urlencode "query={\"measType\":\"Auto\",\"viewType\":\"Station\",\"dateRange\":\"Day\",\"date\":\"$date\",\"viewTypeEntityId\":\"6\",\"channels\":[202,46]}" \
        'http://monitoring.krakow.pios.gov.pl/dane-pomiarowe/pobierz'`
    pm25=`echo $pollution | python3 -c "import sys, json; print(json.load(sys.stdin)['data']['series'][0]['data'][-1][1])"`
    pm25=`echo $pm25 / 1 | bc`
    pm25percent=`echo "$pm25*4" | bc`

    pm10=`echo $pollution | python3 -c "import sys, json; print(json.load(sys.stdin)['data']['series'][1]['data'][-1][1])"`
    pm10=`echo $pm10 / 1 | bc`
    pm10percent=`echo "$pm10*2" | bc`

    pollution="2.5: $pm25 ($pm25percent%)\n10: $pm10 ($pm10percent%)" > /dev/ttyACM0
}

# Initial fetch
meteo
pollution

count=0

while :
do
    if [ $(($count % 12)) -eq 0 ]
    then
        meteo
    fi
    if [ $(($count % 360)) -eq 0 ]
    then
        pollution
    fi

    if [ $(($count % 2)) -eq 0 ]
    then
        echo -e "$meteo\n"
        echo -e $meteo > /dev/ttyACM0
    else
        echo -e "$pollution\n"
        echo -e $pollution > /dev/ttyACM0
    fi
    count=$(($count + 1))
    sleep 5
done
